var documenterSearchIndex = {"docs":
[{"location":"index.html","page":"Introduction","title":"Introduction","text":"CurrentModule = UniversalDynamics","category":"page"},{"location":"index.html#UniversalDynamics","page":"Introduction","title":"UniversalDynamics","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Modules = [UniversalDynamics]","category":"page"},{"location":"index.html#UniversalDynamics.AbstractMeasure","page":"Introduction","title":"UniversalDynamics.AbstractMeasure","text":"AbstractMeasure\n\nSupertype for all measures.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.AbstractNoise","page":"Introduction","title":"UniversalDynamics.AbstractNoise","text":"AbstractNoise{M}\n\nSupertype for noise types with dimension M.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.AffineModelDynamics","page":"Introduction","title":"UniversalDynamics.AffineModelDynamics","text":"AffineModelDynamics{FM,IIP,D,DN,T} <: ShortRateModelDynamics{FM,IIP,D,DN,T}\n\nSupertype for Affine Term Structure (ATS) models. These models provide a closed-form formula for the zero coupon bond prices P(t, T), given by:\n\nP(t T) = exp left( A(t T) - B(t T)^top cdot x(t) right)\n\nwhere A(t T) and B(t T) are deterministic functions obtained through a System of Ordinary Differential Equations called Riccati System.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.AffineParameters","page":"Introduction","title":"UniversalDynamics.AffineParameters","text":"AffineParameters{FM,D,IIP,DN,K,T,S,A,B,X0,X1,C} <: ShortRateParameters{FM,D,IIP,DN}\n\nWraps the parameters of an Affine Term Structure (ATS) model in a unique object, for either OneFactor and MultiFactor models.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.BasicFixedIncomeSecurity","page":"Introduction","title":"UniversalDynamics.BasicFixedIncomeSecurity","text":"BasicFixedIncomeSecurity\n\nSupertype for the basic fixed income market securities which are fundamental for Interest Rate modeling.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.ContinuousMoneyMarketAccount","page":"Introduction","title":"UniversalDynamics.ContinuousMoneyMarketAccount","text":"ContinuousMoneyMarketAccount <: MoneyMarketAccount\n\nSupertype for continuous money market accounts eta(t T).\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.DiagonalNoise","page":"Introduction","title":"UniversalDynamics.DiagonalNoise","text":"DiagonalNoise{M} <: AbstractNoise{M}\n\nA system of SDEs:\n\ndboldsymbolx(t) = dboldsymbolμ(boldsymbolx(t) t) cdot dt + dots\n\nhas DiagonalNoise if boldsymbolσ is a square diagonal matrix. (igualmente la literatura asume que ademas,  la derivada σ[i,i] con respect a x_j es cero. sin embargo esto solo cambia el orden de convergencia del scheme si es que no se cumple).\n\nAclarar que aqui simplificamos el asunto y usamos un sigma que devuelve un vector ya que es lo mismo que usar la diagonal de una matriz. TODO: Obviamente escribir esto mejor.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.DiscountFactor","page":"Introduction","title":"UniversalDynamics.DiscountFactor","text":"DiscountFactor <: BasicFixedIncomeSecurity\n\nSupertype for discount factors D(t T).\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.DiscreteMoneyMarketAccount","page":"Introduction","title":"UniversalDynamics.DiscreteMoneyMarketAccount","text":"DiscreteMoneyMarketAccount <: MoneyMarketAccount\n\nSupertype for discrete money market accounts B(t T).\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.FactorModel","page":"Introduction","title":"UniversalDynamics.FactorModel","text":"FactorModel\n\nSupertype for factor model types.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.FixedIncomeSecurities","page":"Introduction","title":"UniversalDynamics.FixedIncomeSecurities","text":"FixedIncomeSecurities\n\nDefines an insterest rate object with basic fixed income securities given by an specific interest rate model, such as the ShortRateModel or the LiborMarketModel.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.InstantaneousForwardRate","page":"Introduction","title":"UniversalDynamics.InstantaneousForwardRate","text":"InstantaneousForwardRate <: BasicFixedIncomeSecurity\n\nSupertype for the instantaneous forward rate f(t T).\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.InterestRateModelDynamics","page":"Introduction","title":"UniversalDynamics.InterestRateModelDynamics","text":"InterestRateModelDynamics\n\nSupertype for all Interest Rate Models, such as the ShortRateModel, LiborMarketModel, ForwardMarketModel and Heath-Jarrow-Morton framework.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.InterestRateModelDynamicsParameters","page":"Introduction","title":"UniversalDynamics.InterestRateModelDynamicsParameters","text":"InterestRateModelDynamicsParameters\n\nSupertype for all Interest Rate Model Dynamics parameters.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.LiborMarketModelDynamics","page":"Introduction","title":"UniversalDynamics.LiborMarketModelDynamics","text":"LiborMarketModelDynamics <: TermStructureModelDynamics\n\nAlso known as BGM model, describes... (describir bastante del modelo)\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.LiborMarketModelParameters","page":"Introduction","title":"UniversalDynamics.LiborMarketModelParameters","text":"LiborMarketModelParameters\n\nWraps all the Libor Market Model relevant attributes in a single object.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.MoneyMarketAccount","page":"Introduction","title":"UniversalDynamics.MoneyMarketAccount","text":"MoneyMarketAccount <: BasicFixedIncomeSecurity\n\nSupertype for money market accounts, also known as bank accounts.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.MultiFactor","page":"Introduction","title":"UniversalDynamics.MultiFactor","text":"MultiFactor <: FactorModel\n\nEncompasses all the ShortRateModels where N stochastic factors x(t) determine the future evolution of all interest rates.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.MultiFactorAffineModelDynamics","page":"Introduction","title":"UniversalDynamics.MultiFactorAffineModelDynamics","text":"MultiFactorAffineModelDynamics{IIP,D,DN,T,A,P,O} <: AffineModelDynamics{MultiFactor,IIP,D,DN,T}\n\nDefines a MultiFactor ShortRateModelDynamics of Affine type.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.MultiFactorQuadraticModelDynamics","page":"Introduction","title":"UniversalDynamics.MultiFactorQuadraticModelDynamics","text":"MultiFactorQuadraticModelDynamics{IIP,D,DN,T,S,P,O} <: QuadraticModelDynamics{MultiFactor,IIP,D,DN,T}\n\nDefines a MultiFactor ShortRateModel of Quadratic type.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.NonDiagonalNoise","page":"Introduction","title":"UniversalDynamics.NonDiagonalNoise","text":"NonDiagonalNoise{M} <: AbstractNoise{M}\n\nA System of SDEs has NonDiagonalNoise... tenemos que D != M o que σ no es una matriz diagonal.\n\ndX(t) = μ(X(t) t)  dt + σ(X(t) t)  dW(t)\n\nwith μ and σ TODO: Obviamente escribir esto mejor.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.OneFactor","page":"Introduction","title":"UniversalDynamics.OneFactor","text":"OneFactor <: FactorModel\n\nEncompasses all the ShortRateModels where a single stochastic factor x(t) determines the future evolution of all interest rates.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.OneFactorAffineModelDynamics","page":"Introduction","title":"UniversalDynamics.OneFactorAffineModelDynamics","text":"OneFactorAffineModelDynamics{IIP,T,A,P,O} <: AffineModelDynamics{OneFactor,IIP,1,true,T}\n\nDefines a OneFactor ShortRateModelDynamics of Affine type.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.OneFactorQuadraticModelDynamics","page":"Introduction","title":"UniversalDynamics.OneFactorQuadraticModelDynamics","text":"OneFactorQuadraticModelDynamics{IIP,DN,T,P,O} <: QuadraticModelDynamics{OneFactor,IIP,1,DN,T}\n\nDefines a OneFactor ShortRateModel of Quadratic type.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.QuadraticModelDynamics","page":"Introduction","title":"UniversalDynamics.QuadraticModelDynamics","text":"QuadraticModelDynamics{FM,IIP,D,DN,T} <: ShortRateModelDynamics{FM,IIP,D,DN,T}\n\nSupertype for Quadratic Term Structure (QTS) models. These models provide a closed-form formula for the zero coupon bond prices P(t, T), given by:\n\nP(t T) = exp left( -A(t T) - B(t T)^top cdot x(t) - x(t)^top cdot C(t T) cdot x(t) right)\n\nwhere A(t T), B(t T) and C(t T) are deterministic functions obtained through a System of Ordinary Differential Equations called Riccati System.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.QuadraticParameters","page":"Introduction","title":"UniversalDynamics.QuadraticParameters","text":"QuadraticParameters{FM,D,IIP,DN,K,T,S,X0,X1,X2,C} <: ShortRateParameters{FM,D,IIP,DN}\n\nWraps the parameters of a Quadratic Term Structure (QTS) model in a unique object, for either OneFactor and MultiFactor models.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.RiskNeutral","page":"Introduction","title":"UniversalDynamics.RiskNeutral","text":"RiskNeutral <: AbstractMeasure\n\nAlso known as Q, its numeraire is the continuously compounded money market account beta(t).\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.ScalarNoise","page":"Introduction","title":"UniversalDynamics.ScalarNoise","text":"ScalarNoise <: AbstractNoise{1}\n\nA System of SDEs has ScalarNoise when there is only a unique noise process that affects all the Stochastic Differential Equations. In that sense, the system is given by:\n\ndX(t) = μ(X(t) t)  dt + σ(X(t) t)  dW(t)\n\nwith μ and σ functions that returns vectors... and dW a scalar function. TODO: Obviamente escribir esto mejor.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.ShortRateModelDynamics","page":"Introduction","title":"UniversalDynamics.ShortRateModelDynamics","text":"ShortRateModelDynamics{FM,IIP,D,DN,T} <: TermStructureModelDynamics{IIP,D,D,DN,T}\n\nSupertype for ShortRateModels with FactorModel FM, dimension D, in-place or out of place version IIP and with or without diagonal noise DS.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.ShortRateParameters","page":"Introduction","title":"UniversalDynamics.ShortRateParameters","text":"ShortRateParameters{FM,D,IIP,DN}\n\nSupertype for ShortRateModel parameters with FactorModel FM, dimension D, in-place or out of place version IIP and with or without diagonal noise DS.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.SimpleForwardRate","page":"Introduction","title":"UniversalDynamics.SimpleForwardRate","text":"SimpleForwardRate <: BasicFixedIncomeSecurity\n\nSupertype for the simply-compounded forward interest rate or simple forward rate L(t T S).\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.Spot","page":"Introduction","title":"UniversalDynamics.Spot","text":"Spot <: AbstractMeasure\n\nUses the discrete-time equivalent of the continuously compounded money market account as the numeraire. It is often convenient when working with a multitude of forward rates on a tenor structure.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.SpotRate","page":"Introduction","title":"UniversalDynamics.SpotRate","text":"SpotRate <: BasicFixedIncomeSecurity\n\nSupertype for spot rates, also known as short rates.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.TForward","page":"Introduction","title":"UniversalDynamics.TForward","text":"TForward{I} <: AbstractMeasure\n\nAlso known as Q^T, uses a T maturity zero coupon bond P(t T) as the numeraire. When working with a tenor structure, I identifies P(t T_I) as the numeraire, with T_I the I-th maturity in the tenor structure.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.TermStructureModelDynamics","page":"Introduction","title":"UniversalDynamics.TermStructureModelDynamics","text":"TermStructureModelDynamics <: InterestRateModelDynamics\n\nSupertype for all Term Structure Interest Rate models.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.Terminal","page":"Introduction","title":"UniversalDynamics.Terminal","text":"Terminal <: AbstractMeasure\n\nUses a T_N maturity zero coupon bond P(t T_N), with T_N the last maturity in the tenor structure, as numeraire.\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.ZeroCouponBond","page":"Introduction","title":"UniversalDynamics.ZeroCouponBond","text":"ZeroCouponBond <: BasicFixedIncomeSecurity\n\nSupertype for zero coupon bonds, also known as discount bonds, P(t T).\n\n\n\n\n\n","category":"type"},{"location":"index.html#UniversalDynamics.q-Tuple{AbstractArray{var\"#s35\",1} where var\"#s35\"<:Real,Real}","page":"Introduction","title":"UniversalDynamics.q","text":"q(Tenors::Vector{<:Real}, t::Real)\n\nReturns the index in the tenor structure Tenors such that Tenors[q(t)-1] ≤ t < Tenors[q(t)], which corresponds to a left continuous interpretation.\n\n\n\n\n\n","category":"method"},{"location":"index.html#UniversalDynamics.riccati!-Tuple{Any,Any,UniversalDynamics.ShortRateParameters,Any}","page":"Introduction","title":"UniversalDynamics.riccati!","text":"riccati!(du, u, p::ShortRateParameters, t) -> Nothing\n\nIn place computation of a ShortRateModel Riccati's System.\n\n\n\n\n\n","category":"method"},{"location":"index.html#UniversalDynamics.riccati-Tuple{Any,UniversalDynamics.ShortRateParameters,Any}","page":"Introduction","title":"UniversalDynamics.riccati","text":"riccati(u, p::ShortRateParameters, t) -> SVector\n\nOut of place computation of a ShortRateModel Riccati's System.\n\n\n\n\n\n","category":"method"}]
}
