using NLsolve

# Dai, Q. and Singleton, K.J. (2000), Specification Analysis of Affine Term Structure
# Models. The Journal of Finance, 55: 1943-1978. doi:10.1111/0022-1082.00278

function DaiSingletonParameters()

    # calibrated parameters from Dai-Singleton (2000) for the ùî∏‚ÇÅ(3)‚Çò‚Çê‚Çì Ar representation:
    Œº = 0.366
    ŒΩ = 0.228
    Œ∫_rœÖ = 0.0348
    Œ∫ = 18.
    œÖÃÑ = 0.0158
    Œ∏ÃÑ = 0.0827
    œÉ_Œ∏œÖ = 0.0212
    œÉ_rœÖ = 4.2
    œÉ_rŒ∏ = -3.77
    œÉ_Œ∏r = -0.0886
    Œ∂2 = 0.000208
    Œ±_r = 3.26e-14
    Œ∑2 = 0.00839
    Œ≤_Œ∏ = 7.9e-10

    # useful intermediate variables
    Œ∑ = sqrt(Œ∑2)
    Œ∂ = sqrt(Œ∂2)
    q = (Œ∫ - ŒΩ) / Œ∫

    # compute the AY representation parameters by means of a non linear solver
    function f!(F, x)
        F[1] = Œº - x[8]
        F[2] = ŒΩ - x[9]
        F[3] = Œ∫ - x[10]
        F[4] = Œ∑2 - x[4] * (1 + x[12])^2
        F[5] = Œ∂2 - q^2 * x[1]
        F[6] = Œ∫_rœÖ - x[6] * (x[8] - x[10]) / x[4] / ((1 + x[12])^2)
        F[7] = œÉ_rœÖ - (x[6] + x[11] + x[13]) / x[4] / ((1 + x[12])^2)
        F[8] = Œ≤_Œ∏ - q^2 * x[3] / x[4] / ((1 + x[12])^2)
        F[9] = œÖÃÑ - x[4] * x[7] * (1 + x[12])^2
        F[10] = Œ∏ÃÑ - x[5] + x[6] * x[7]
        F[11] = œÉ_rŒ∏ - (1 + x[14]) / q
        F[12] = œÉ_Œ∏œÖ - q * x[11] / x[4] / ((1 + x[12])^2)
        F[13] = œÉ_Œ∏r - q * x[12] / (1 + x[12])
        F[14] = Œ±_r - x[2] * (1 + x[12])^2
    end

    # solve
    x = nlsolve(f!, ones(14), autodiff = :forward)

    Œ±‚ÇÇ = x.zero[1]
    Œ±‚ÇÉ = x.zero[2]
    Œ≤‚ÇÇ‚ÇÅ = x.zero[3]
    Œ≤‚ÇÉ‚ÇÅ = x.zero[4]
    Œ¥‚ÇÄ = x.zero[5]
    Œ¥‚ÇÅ = x.zero[6]
    Œ∏‚ÇÅ = x.zero[7]
    Œ∫‚ÇÅ‚ÇÅ = x.zero[8]
    Œ∫‚ÇÇ‚ÇÇ = x.zero[9]
    Œ∫‚ÇÉ‚ÇÉ = x.zero[10]
    œÉ‚ÇÇ‚ÇÅ = x.zero[11]
    œÉ‚ÇÇ‚ÇÉ = x.zero[12]
    œÉ‚ÇÉ‚ÇÅ = x.zero[13]
    œÉ‚ÇÉ‚ÇÇ = x.zero[14]

    # initial conditions (not defined in Dai Singleton paper, but needed for simulations)
    # given dummy initial conditions for the AY representation:
    Y‚ÇÅ‚ÇÄ = 1.
    Y‚ÇÇ‚ÇÄ = 1.
    Y‚ÇÉ‚ÇÄ = 1.
    Y‚ÇÄ = [Y‚ÇÅ‚ÇÄ, Y‚ÇÇ‚ÇÄ, Y‚ÇÉ‚ÇÄ]

    L = [Œ≤‚ÇÉ‚ÇÅ * (1 + œÉ‚ÇÇ‚ÇÉ)^2 0 0; 0 q 0; Œ¥‚ÇÅ 1 1]
    œë = [0, Œ¥‚ÇÄ + Œ¥‚ÇÅ * Œ∏‚ÇÅ, Œ¥‚ÇÄ]

    # compute factors initial conditions for Ar representation, i.e. the vector given by:
    # [œÖ‚ÇÄ, Œ∏‚ÇÄ, r‚ÇÄ]
    œÖ‚ÇÄ, Œ∏‚ÇÄ, r‚ÇÄ = L * Y‚ÇÄ + œë

    return (œÖ‚ÇÄ, Œ∏‚ÇÄ, r‚ÇÄ, Œº, ŒΩ, Œ∫_rœÖ, Œ∫, œÖÃÑ, Œ∏ÃÑ, Œ∑, œÉ_Œ∏œÖ, œÉ_Œ∏r, œÉ_rœÖ, œÉ_rŒ∏, Œ∂, Œ±_r, Œ≤_Œ∏)
end